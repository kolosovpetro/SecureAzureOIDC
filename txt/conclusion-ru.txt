Заключение.

В этой работе была рассмотрена проблема безопасного хранения токена доступа и передачи его между микросервисами.
Были рассмотрены возможные уязвимости, такие как: Cross-Site Scripting (XSS) и Cross-Site Request Forgery (CSRF).

Для устранения данных уязвимостей было предложена использовать как хранилище токенов безопасности - Cookies, с обязательными
флагами HttpOnly и SameSite, значения последнего - Lax или Strict.

Нами был выбран "Authorization Code Grant". Его суть заключается в том, чтобы сначала получить код авторизации, а затем отправить
этот код на эндпоинт, который "обменивает" его на токен доступа, токен обновления и идентификационный токен. Так как данная авторизация
основана на перенаправлении, клиент должен взаимодействовать с веб-браузером и принимать входящие запросы (через перенаправление) от
сервера авторизации.

Реализовали авторизацию так: Asp.Net Core приложение, отвечающее за перенаправление запросов пользователя на микросервисы, раздает
статиком клиент Angular приложения. Это позволяет разместить клиент и сервер на одном домене. Нужно это для того чтобы передача файлов
Cookies на другой домен была исключена. Далеше мы посылаем токен через YARP на микросервисы, делается это через специльнулью настройку,
задача которой брать расшифрованный токен доступа и класть его в заголовок. Для отправки запросов на сервер необходимо использовать
параметр {withCredentials: true}. Это нужно для того, чтобы к каждому запросу на сервер прикреплялись файлы Cookies.

Реализация авторизации базируется на протоколе OpenId Connect, Asp.Net Core, Azure Active Directory, Angular и библиотеке Yarp.

Обновление токена доступа было реализовано с помощью Ticket Store и Hosted Service. Задача первого заключается
в проверке каждого запроса на истечение срока действия токена доступа. В случае истечения срока действия, токен обновляется с помощью
запроса к эндпоинту сервера авторизации. Также задача Ticket Store состоит в сохранении токена доступа и токена обновления, которые
являются частью Authentication Ticket, в базе данных в виде массива байтов. Hosted Service необходим для фонового обновления истекающих
токенов доступа, чтобы поддерживать сессии пользователей активными.

В статье мы решили проблему безопасного хранения токена доступа и передачи его между микросервисами, а так же устранили
выявленные уязвимости Cross-Site Scripting (XSS) и Cross-Site Request Forgery (CSRF).