Заключение.

Чтобы защитить токен доступа пользователя от атак, таких как Cross-Site Scripting (XSS) и Cross-Site Request Forgery (CSRF), 
мы обязаны использовать хранилище данных - Cookies с обязательным флагом HttpOnly. Любое другое хранилище небезопасно.

Нами был выбран "Authorization Code Grant". Его суть заключается в том, чтобы сначала получить код авторизации, а затем отправить 
этот код на эндпоинт, который "обменивает" его на токен доступа, токен обновления и идентификационный токен. Так как данная авторизация 
основана на перенаправлении, клиент должен взаимодействовать с веб-браузером и принимать входящие запросы (через перенаправление) от 
сервера авторизации.

Авторизация была реализована с помощью библиотеки Microsoft.AspNetCore.Authentication.OpenIdConnect.

Что касается обновления токена доступа, эта часть была реализована с помощью Ticket Store и Hosted Service. Задача первого заключается 
в проверке каждого запроса на истечение срока действия токена доступа. В случае истечения срока действия, токен обновляется с помощью 
запроса к эндпоинту сервера авторизации. Также задача Ticket Store состоит в сохранении токена доступа и токена обновления, которые 
являются частью Authentication Ticket, в базе данных в виде массива байтов. Hosted Service необходим для фонового обновления истекающих 
токенов доступа, чтобы поддерживать сессии пользователей активными.

Запросы на обновление токена доступа были реализованы с помощью библиотеки IdentityModel. Кроме удобного способа построения запросов 
к серверу авторизации, данная библиотека предоставляет необходимые константы.

Для решения проблемы передачи токена доступа между микросервисами нам понадобилась библиотека Yarp.ReverseProxy и его настройка, которая 
при каждом запросе он добавляет расшифрованный токен доступа, полученный из Cookies, в заголовок.

Клиент и сервер обязательно должны быть в одном домене. Для отправки запросов необходимо использовать параметр {withCredentials: true}. 
Это нужно для того, чтобы к каждому запросу на сервер прикреплялись файлы Cookies.

В статье мы решили проблему безопасного хранения токена доступа и передачи его между микросервисами.