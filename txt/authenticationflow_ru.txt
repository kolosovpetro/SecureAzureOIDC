Как уже ранее говорилось, авторизация происходит посредством получения токенов доступа и обновления. Теперь стоит обсудить
как происходит аутентификация на платформе .Net Core. Рассмотрим её на примере диаграммы.

1. Когда пользователь открывает в браузере фронтенд приложение, отправляется запрос на эндпоинт 
https://localhost:4200/api/isAuth, который проверяет куки пользователя и сообщает авторизован ли пользователь или нет.

2. В случае если пользователь авторизован - сервер дает понять это отправляя обратно true, иначе false.

3. В Angular приложение прописана логика, отвечающая за перенаправление пользователя на эндпоинт https://localhost:4200/login
если пользователь не авторизован.

4. В свою очередь метод Login перенаправляет пользователя на ендпоинт авторизации. Важно уточнить, чтобы получить некоторую
информацию о профиле конечного пользователя, мы должны вписать "openid" в scope. Пример:

serviceCollection
    .AddAuthentication(options => {...})
    .AddCookie(CookieAuthenticationDefaults.AuthenticationScheme, options => {...})
    .AddOpenIdConnect(AuthConstants.AppOidc, options =>
    {
        ...
        options.Scope.Add("openid");
    });

5. Если сервер авторизации успешно аутентифицировал пользователя, он перенаправляется на эндпоинт https://localhost:4200,
уже с установленными куки.

6. Повторяем шаг 1, на этот раз сервер должен сообщить что пользователь авторизован.

7. Angular приложение отправляет запрос на эндпоинт https://localhost:4200/api/OtherApi1/products.

8. Библиотека YARP берет токен доступа из куки и кладет его в заголовок, после чего перенаправляет запрос на один из микросервисов.

9. Если приходит код 401, повторяем флоу заного.